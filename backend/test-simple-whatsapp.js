const { whatsappSimpleService } = require('./dist/services/whatsapp-simple.service');

async function testSimpleWhatsAppService() {
  console.log('üß™ Probando SimpleWhatsAppService...\n');

  try {
    // Test 1: Crear sesi√≥n
    console.log('1Ô∏è‚É£ Creando sesi√≥n de prueba...');
    const userId = 'test-user-123';
    const result = await whatsappSimpleService.createSession(userId);
    console.log('‚úÖ Sesi√≥n creada:', result);

    // Test 2: Obtener estado de conexi√≥n
    console.log('\n2Ô∏è‚É£ Obteniendo estado de conexi√≥n...');
    const status = whatsappSimpleService.getConnectionStatus(userId);
    console.log('‚úÖ Estado:', status);

    // Test 3: Obtener estad√≠sticas
    console.log('\n3Ô∏è‚É£ Obteniendo estad√≠sticas...');
    const stats = whatsappSimpleService.getSessionStats();
    console.log('‚úÖ Estad√≠sticas:', stats);

    // Test 4: Esperar un poco para ver si se genera QR
    console.log('\n4Ô∏è‚É£ Esperando generaci√≥n de QR (10 segundos)...');
    await new Promise(resolve => setTimeout(resolve, 10000));

    // Test 5: Intentar obtener QR
    console.log('\n5Ô∏è‚É£ Obteniendo QR code...');
    const qrCode = await whatsappSimpleService.getQRCode(userId);
    const qrDataURL = await whatsappSimpleService.getQRCodeDataURL(userId);
    console.log('‚úÖ QR Code disponible:', !!qrCode);
    console.log('‚úÖ QR Data URL disponible:', !!qrDataURL);

    // Test 6: Obtener QR del cache
    console.log('\n6Ô∏è‚É£ Obteniendo QR del cache...');
    const qrFromCache = whatsappSimpleService.getQRCodeFromCache(userId);
    console.log('‚úÖ QR del cache:', qrFromCache ? 'Disponible' : 'No disponible');

    // Test 7: Limpiar sesi√≥n
    console.log('\n7Ô∏è‚É£ Limpiando sesi√≥n...');
    await whatsappSimpleService.disconnectSession(userId);
    console.log('‚úÖ Sesi√≥n limpiada');

    console.log('\nüéâ Todas las pruebas completadas exitosamente!');

  } catch (error) {
    console.error('‚ùå Error durante las pruebas:', error);
  }
}

// Ejecutar pruebas
testSimpleWhatsAppService();
