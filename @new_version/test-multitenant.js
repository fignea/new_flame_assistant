const axios = require('axios');

const API_BASE_URL = 'http://localhost:3001/api';

async function testMultiTenant() {
  console.log('üß™ Iniciando pruebas del sistema multi-tenant...\n');

  try {
    // 1. Crear usuario de prueba
    console.log('1Ô∏è‚É£ Creando usuario de prueba...');
    const userResponse = await axios.post(`${API_BASE_URL}/auth/register`, {
      email: 'test@multitenant.com',
      password: 'test123',
      name: 'Usuario Prueba'
    });
    
    const { user, accessToken } = userResponse.data.data;
    console.log('‚úÖ Usuario creado:', user.email);
    
    const headers = { Authorization: `Bearer ${accessToken}` };

    // 2. Obtener organizaciones del usuario
    console.log('\n2Ô∏è‚É£ Obteniendo organizaciones del usuario...');
    const orgsResponse = await axios.get(`${API_BASE_URL}/organizations`, { headers });
    console.log('‚úÖ Organizaciones encontradas:', orgsResponse.data.data.length);
    
    const defaultOrg = orgsResponse.data.data[0];
    console.log('üìã Organizaci√≥n por defecto:', defaultOrg.name);

    // 3. Crear nueva organizaci√≥n
    console.log('\n3Ô∏è‚É£ Creando nueva organizaci√≥n...');
    const newOrgResponse = await axios.post(`${API_BASE_URL}/organizations`, {
      name: 'Empresa de Prueba',
      slug: 'empresa-prueba',
      description: 'Organizaci√≥n de prueba para testing',
      plan: 'pro'
    }, { headers });
    
    const newOrg = newOrgResponse.data.data;
    console.log('‚úÖ Nueva organizaci√≥n creada:', newOrg.name);

    // 4. Crear sesi√≥n de WhatsApp para la nueva organizaci√≥n
    console.log('\n4Ô∏è‚É£ Creando sesi√≥n de WhatsApp...');
    const sessionResponse = await axios.post(`${API_BASE_URL}/whatsapp/session`, {}, { headers });
    console.log('‚úÖ Sesi√≥n de WhatsApp creada:', sessionResponse.data.data.sessionId);

    // 5. Verificar que la sesi√≥n est√° asociada a la organizaci√≥n correcta
    console.log('\n5Ô∏è‚É£ Verificando asociaci√≥n de sesi√≥n con organizaci√≥n...');
    const statusResponse = await axios.get(`${API_BASE_URL}/whatsapp/status`, { headers });
    console.log('‚úÖ Estado de WhatsApp obtenido');

    // 6. Obtener estad√≠sticas de la organizaci√≥n
    console.log('\n6Ô∏è‚É£ Obteniendo estad√≠sticas de la organizaci√≥n...');
    const statsResponse = await axios.get(`${API_BASE_URL}/organizations/${newOrg.id}`, { headers });
    console.log('‚úÖ Estad√≠sticas obtenidas:', statsResponse.data.data.stats);

    console.log('\nüéâ ¬°Todas las pruebas pasaron exitosamente!');
    console.log('\nüìä Resumen:');
    console.log(`   - Usuario: ${user.email}`);
    console.log(`   - Organizaciones: ${orgsResponse.data.data.length + 1}`);
    console.log(`   - Nueva organizaci√≥n: ${newOrg.name} (${newOrg.slug})`);
    console.log(`   - Sesi√≥n WhatsApp: ${sessionResponse.data.data.sessionId}`);
    console.log(`   - Plan: ${newOrg.plan}`);

  } catch (error) {
    console.error('‚ùå Error en las pruebas:', error.response?.data || error.message);
    process.exit(1);
  }
}

// Ejecutar pruebas
testMultiTenant();
