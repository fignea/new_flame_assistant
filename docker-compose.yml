version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: flame-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: flame_assistant
      POSTGRES_USER: flame_user
      POSTGRES_PASSWORD: flame_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - flame-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flame_user -d flame_assistant"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: flame-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - flame-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flame-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      
      # Base de datos
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: flame_assistant
      DB_USER: flame_user
      DB_PASSWORD: flame_password
      DATABASE_URL: postgresql://flame_user:flame_password@postgres:5432/flame_assistant
      
      # Redis
      REDIS_URL: redis://:redis_password@redis:6379
      
      # JWT
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-refresh-secret-key-change-in-production
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      
      # CORS
      CORS_ORIGIN: http://localhost:5173
      
      # Logging
      LOG_LEVEL: info
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - flame-network
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (desarrollo)
  frontend:
    image: node:18-alpine
    container_name: flame-frontend
    restart: unless-stopped
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_WS_URL: ws://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - flame-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  flame-network:
    driver: bridge
